:root {
  --tooltip-base-fs: 1rem;
  --tooltip-width: 25ch;
  --tooltip-padding: 0.3em;
  --tooltip-base-rotation: 180deg;
  --arrow-right-translate-start: translateX(-50%);
  --arrow-right-translate-end: translateX(30%);
  --arrow-up-translate-start: translateY(50%);
  --arrow-up-translate-end: translateY(-30%);
  --arrow-down-translate-start: translateY(-50%);
  --arrow-down-translate-end: translateY(30%);
  --arrow-left-translate-start: translateX(50%);
  --arrow-left-translate-end: translateX(-30%);

  --arrow-translate-start: var(--arrow-left-translate-start);
  --arrow-translate-end: var(--arrow-left-translate-end);

  --flash-arrow-up: flash-arrow-up;
  --flash-arrow-down: flash-arrow-down;
  --flash-arrow-right: flash-arrow-right;
  --flash-arrow-left: flash-arrow-left;
}
*,
::before,
::after {
  box-sizing: border-box;
}

.container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  padding: 2rem;
}

body {
  margin: 0;
  background-color: rgb(216, 194, 149);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,
    'Open Sans', 'Helvetica Neue', sans-serif;
}

.container.x-left {
  justify-content: flex-start;
}

.container.x-right {
  justify-content: flex-end;
}

.container.x-center {
  justify-content: center;
}

.container.y-top {
  align-items: flex-start;
}

.container.y-bottom {
  align-items: flex-end;
}

.container.y-center {
  align-items: center;
}

.help-text {
  border-bottom: 3px dotted blue;
}

.tooltip-container {
  position: fixed;
  pointer-events: none;
  margin: 0;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
}

.tooltip {
  font-size: var(--tooltip-fs, var(--tooltip-base-fs));
  padding: var(--tooltip-padding);
  max-width: var(--tooltip-width);
  border-radius: 0.25rem;
  background-color: var(--tooltip-bg-clr, rgb(255, 255, 255));
  color: var(--tooltip-fg-clr, rgba(17, 17, 17, 0.87));
  font-weight: 300;

  position: relative;
  border: 2px solid transparent;
  border-radius: 5px;
  background: linear-gradient(var(--tooltip-bg-clr) 0% 100%);
  background-clip: padding-box;
  box-shadow: 2px 3px 4px 0px rgba(0, 0, 0, 0.53);
  white-space: pre-wrap;
  /* word-break: break-all; */
}

.tooltip::after {
  position: absolute;
  top: -2px;
  bottom: -2px;
  left: -2px;
  right: -2px;
  background: linear-gradient(20deg, var(--tooltip-bg-clr), var(--tooltip-fg-clr));
  content: '';
  z-index: -1;
  border-radius: 5px;
}

.tooltip-outer {
  position: absolute;
  display: grid;
  place-items: center;
  width: fit-content;
  grid-template-columns: auto minmax(50px, auto) auto;
  grid-template-rows: auto auto auto;
  grid-template-areas:
    'tl t tr'
    'l  m  r'
    'bl b br';
  z-index: 0;
  gap: var(--tooltip-spacing);
}

.tooltip-arrow {
  font-size: var(--tooltip-arrow-fs);
  font-weight: 900;
  z-index: -1;
  color: var(--tooltip-bg-clr);
  filter: drop-shadow(5px 5px 2px rgba(0, 0, 0, 0.5));
}

.tooltip-arrow {
  color: transparent;
  background-clip: text;
  -webkit-background-clip: text;
  background-repeat: no-repeat;
  background-size: var(--bg-size) var(--bg-size);
  background-image: linear-gradient(
    var(--bg-degree),
    transparent,
    var(--tooltip-bg-clr) 20% 80%,
    transparent
  );

  animation-duration: 4s;
  animation-iteration-count: infinite;
  animation-duration: normal;
  animation-timing-function: cubic-bezier(0, 0, 0.2, 1) ease-in-out;
  animation-play-state: paused;
  animation-play-state: running;

  --bg-size: calc(var(--tooltip-arrow-fs) * 3);
  line-height: 1;
}

.animate-tooltip {
  animation-play-state: running;
}

.tooltip-arrow-top {
  animation-name: var(--flash-arrow), move-arrow-top;
  grid-area: t;
  transform: rotate(calc(var(--tooltip-base-rotation) + 270deg));
}
.tooltip-arrow-right {
  animation-name: var(--flash-arrow), move-arrow-right;
  grid-area: r;
  transform: rotate(calc(var(--tooltip-base-rotation) + 0deg));
}
.tooltip-arrow-bottom {
  animation-name: var(--flash-arrow), move-arrow-bottom;
  grid-area: b;
  transform: rotate(calc(var(--tooltip-base-rotation) + 90deg));
}
.tooltip-arrow-left {
  animation-name: var(--flash-arrow), move-arrow-left;
  grid-area: l;
  transform: rotate(calc(var(--tooltip-base-rotation) + 180deg));
}

.tooltip-arrow-bottom-left {
  animation-name: var(--flash-arrow), move-arrow-bottom-left;
  grid-area: bl;
  transform: rotate(calc(var(--tooltip-base-rotation) + 135deg));
}
.tooltip-arrow-top-right {
  animation-name: var(--flash-arrow), move-arrow-top-right;
  grid-area: tr;
  transform: rotate(calc(var(--tooltip-base-rotation) + 315deg));
}
.tooltip-arrow-top-left {
  animation-name: var(--flash-arrow), move-arrow-top-left;
  grid-area: tl;
  transform: rotate(calc(var(--tooltip-base-rotation) + 225deg));
}

.tooltip-arrow-bottom-right {
  animation-name: var(--flash-arrow), move-arrow-bottom-right;
  grid-area: br;
  transform: rotate(calc(var(--tooltip-base-rotation) + 45deg));
}

@keyframes flash-arrow-right {
  0% {
    background-position-x: calc(var(--bg-size) * -1);
  }
  100% {
    background-position-x: calc(var(--bg-size) * 1);
  }
}

@keyframes flash-arrow-up {
  0% {
    background-position-y: calc(var(--bg-size) * 1);
  }
  100% {
    background-position-y: calc(var(--bg-size) * -1.5);
  }
}

@keyframes flash-arrow-down {
  0% {
    background-position-y: calc(var(--bg-size) * -1);
  }
  100% {
    background-position-y: calc(var(--bg-size) * 1);
  }
}

@keyframes flash-arrow-left {
  0% {
    background-position-x: calc(var(--bg-size) * 1);
  }
  100% {
    background-position-x: calc(var(--bg-size) * -1.5);
  }
}

@keyframes move-arrow-top {
  0% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 270deg)) var(--arrow-translate-start);
  }
  100% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 270deg)) var(--arrow-translate-end);
  }
}
@keyframes move-arrow-right {
  0% {
    transform: rotate(var(--tooltip-base-rotation)) var(--arrow-translate-start);
  }
  100% {
    transform: rotate(var(--tooltip-base-rotation)) var(--arrow-translate-end);
  }
}
@keyframes move-arrow-bottom {
  0% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 90deg)) var(--arrow-translate-start);
  }
  100% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 90deg)) var(--arrow-translate-end);
  }
}
@keyframes move-arrow-left {
  0% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 180deg)) var(--arrow-translate-start);
  }
  100% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 180deg)) var(--arrow-translate-end);
  }
}
@keyframes move-arrow-bottom-left {
  0% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 135deg)) var(--arrow-translate-start);
  }
  100% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 135deg)) var(--arrow-translate-end);
  }
}
@keyframes move-arrow-top-right {
  0% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 315deg)) var(--arrow-translate-start);
  }
  100% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 315deg)) var(--arrow-translate-end);
  }
}
@keyframes move-arrow-top-left {
  0% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 225deg)) var(--arrow-translate-start);
  }
  100% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 225deg)) var(--arrow-translate-end);
  }
}
@keyframes move-arrow-bottom-right {
  0% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 45deg)) var(--arrow-translate-start);
  }
  100% {
    transform: rotate(calc(var(--tooltip-base-rotation) + 45deg)) var(--arrow-translate-end);
  }
}

/* =========== Settings ============== */
.settings {
  width: 1.5rem;
  display: inline-block;
  padding: 0.1rem;
  cursor: pointer;
  transition: transform 0.5s cubic-bezier(0.65, 0.05, 0.36, 1);
}

.settings:hover {
  transform: rotate(180deg);
}

.settings-modal {
  display: none;
  position: absolute;
  top: 50%;
  left: 50%;
  padding: 1rem;
  border-radius: 0.5rem;
  background: rgb(255, 242, 226);
  transform: translate(-50%, -50%);
  z-index: 10;
  box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.15), 0 10px 15px rgba(0, 0, 0, 0.2);
  font-size: 1.2rem;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 1rem;
  line-height: 1.5;
}

.open-settings .settings-modal {
  display: block;
  display: grid;
}

.settings-modal label {
  display: block;
  color: rgba(102, 102, 102, 0.794);
  font-size: 1rem;
}
.settings-modal input {
  transition: outline-offset 0.3s ease;
  margin-top: 0.2rem;
  color: rgb(20, 20, 20);
}

input,
button {
  font: inherit;
  outline: 0;
  border: 2px solid rgba(99, 105, 107, 0.13);
  background: 0;
  width: 100%;
  padding: 0.2em 0.4em;
  outline-offset: -2px;
}

.settings-modal button:hover {
  background: rgb(80, 240, 120);
  color: white;
  cursor: pointer;
}

.settings-modal input:focus {
  outline: 1px solid rgb(80, 240, 120);
}
